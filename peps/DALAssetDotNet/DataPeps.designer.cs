#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18444
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DALAssetDotNet
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="peps")]
	public partial class DataPepsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertAssetsInfo(AssetsInfo instance);
    partial void UpdateAssetsInfo(AssetsInfo instance);
    partial void DeleteAssetsInfo(AssetsInfo instance);
    #endregion
		
		public DataPepsDataContext() : 
				base(global::DALAssetDotNet.Properties.Settings.Default.pepsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataPepsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataPepsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataPepsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataPepsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AssetsInfo> AssetsInfo
		{
			get
			{
				return this.GetTable<AssetsInfo>();
			}
		}
		
		public System.Data.Linq.Table<AssetsValue> AssetsValue
		{
			get
			{
				return this.GetTable<AssetsValue>();
			}
		}
		
		public System.Data.Linq.Table<Volatilite> Volatilite
		{
			get
			{
				return this.GetTable<Volatilite>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="peps.AssetsInfo")]
	public partial class AssetsInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _namego;
		
		private string _nameyh;
		
		private string _fullname;
		
		private string _sector;
		
		private string _country;
		
		private string _currency;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnamegoChanging(string value);
    partial void OnnamegoChanged();
    partial void OnnameyhChanging(string value);
    partial void OnnameyhChanged();
    partial void OnfullnameChanging(string value);
    partial void OnfullnameChanged();
    partial void OnsectorChanging(string value);
    partial void OnsectorChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void OncurrencyChanging(string value);
    partial void OncurrencyChanged();
    #endregion
		
		public AssetsInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_namego", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string namego
		{
			get
			{
				return this._namego;
			}
			set
			{
				if ((this._namego != value))
				{
					this.OnnamegoChanging(value);
					this.SendPropertyChanging();
					this._namego = value;
					this.SendPropertyChanged("namego");
					this.OnnamegoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nameyh", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string nameyh
		{
			get
			{
				return this._nameyh;
			}
			set
			{
				if ((this._nameyh != value))
				{
					this.OnnameyhChanging(value);
					this.SendPropertyChanging();
					this._nameyh = value;
					this.SendPropertyChanged("nameyh");
					this.OnnameyhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fullname", DbType="VarChar(50)")]
		public string fullname
		{
			get
			{
				return this._fullname;
			}
			set
			{
				if ((this._fullname != value))
				{
					this.OnfullnameChanging(value);
					this.SendPropertyChanging();
					this._fullname = value;
					this.SendPropertyChanged("fullname");
					this.OnfullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sector", DbType="VarChar(50)")]
		public string sector
		{
			get
			{
				return this._sector;
			}
			set
			{
				if ((this._sector != value))
				{
					this.OnsectorChanging(value);
					this.SendPropertyChanging();
					this._sector = value;
					this.SendPropertyChanged("sector");
					this.OnsectorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="VarChar(50)")]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currency", DbType="VarChar(5)")]
		public string currency
		{
			get
			{
				return this._currency;
			}
			set
			{
				if ((this._currency != value))
				{
					this.OncurrencyChanging(value);
					this.SendPropertyChanging();
					this._currency = value;
					this.SendPropertyChanged("currency");
					this.OncurrencyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="peps.AssetsValue")]
	public partial class AssetsValue
	{
		
		private string _namego;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<float> _close;
		
		public AssetsValue()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_namego", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string namego
		{
			get
			{
				return this._namego;
			}
			set
			{
				if ((this._namego != value))
				{
					this._namego = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[close]", Storage="_close", DbType="Real")]
		public System.Nullable<float> close
		{
			get
			{
				return this._close;
			}
			set
			{
				if ((this._close != value))
				{
					this._close = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Volatilite")]
	public partial class Volatilite
	{
		
		private string _namego;
		
		private int _runId;
		
		private System.Nullable<float> _vol;
		
		public Volatilite()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_namego", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string namego
		{
			get
			{
				return this._namego;
			}
			set
			{
				if ((this._namego != value))
				{
					this._namego = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_runId", DbType="Int NOT NULL")]
		public int runId
		{
			get
			{
				return this._runId;
			}
			set
			{
				if ((this._runId != value))
				{
					this._runId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vol", DbType="Real")]
		public System.Nullable<float> vol
		{
			get
			{
				return this._vol;
			}
			set
			{
				if ((this._vol != value))
				{
					this._vol = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
